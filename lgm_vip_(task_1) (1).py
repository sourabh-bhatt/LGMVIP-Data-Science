# -*- coding: utf-8 -*-
"""LGM-VIP (Task 1).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ufSTsohye0JJ5o9AbE4ddfQxBjQPmFDz

**LGM**-**VIP**'**21** **(Task** **1)**  
**Iris**-**Flower** **Classification** **ML** **Project** 

**A** "**Hello** **World**" **program** **for** **machine** **learning**
**of** **Data** **Science**

**TASK OBJECTIVE** :- Classify the categories of Iris Flower

Import libraries
"""

import numpy as np
import matplotlib.pyplot as plt

"""Now we load the dataset"""

from sklearn.datasets import load_iris

dataset = load_iris() #dataset is in the form of dictionary

print(dataset.DESCR)

"""**Dataset is divded into sepal length in cm, sepal width in cm, petal length in cm, petal width in cm**"""

X = dataset.data

"""**We have 4 variables representing 4 columns i.e sepal length in cm, sepal width in cm, petal length in cm, petal width in cm**

**Our Class is species of flowers**
"""

X

"""**The** **target of dataset contains 3 categories** """

Y = dataset.target

""" **which is "0", "1" & "2"**"""

Y

"""**Visualize the data by using matplotlib**

One class is linearly separable from the other 2; which is satosa. The
latter are NOT linearly separable from each other.
"""

plt.plot(X[:, 0][Y == 0]* X[:, 1][Y == 0], X[:, 1][Y == 0]* X[:, 2][Y == 0], 'r.', label='Setosa')
plt.plot(X[:, 0][Y == 1]* X[:, 1][Y == 1], X[:, 1][Y == 1]* X[:, 2][Y == 0], 'g.', label='Versicolour')
plt.plot(X[:, 0][Y == 2]* X[:, 1][Y == 2], X[:, 1][Y == 2]* X[:, 2][Y == 0], 'b.', label='Verginica')
plt.legend()
plt.show()

"""Now we need to standraise the data"""

from sklearn.preprocessing import StandardScaler
X = StandardScaler().fit_transform(X)

"""Dividing dataset into **Train** and **Test** case:-

by split function
"""

from sklearn.model_selection import train_test_split

X_train, X_test, Y_train, Y_test = train_test_split(X,Y)

"""Now creting a **Machine Learning** model that can classify categories of flower

We use **Logistic Regression** for our model
"""

from sklearn.linear_model import LogisticRegression

"""Creating object for this logistic Regression Model"""

log_reg = LogisticRegression()

log_reg.fit(X_train, Y_train)

"""Now our ML Model is trained

Now we need to check its accuracy
"""

log_reg.score(X_test,Y_test )

"""Here we can see that our test is 97% acuurate

To check the accuracy for whole dataset
"""

log_reg.score(X, Y)

"""Here we can see that our whole dataset is 97% acuurate"""

